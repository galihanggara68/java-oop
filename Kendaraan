package first;

interface BahanBakar{
	
}

class Bensin implements BahanBakar{}

class Avtur implements BahanBakar{}

class Premium implements BahanBakar{}

public class Kendaraan implements BaseKendaraan{
	// State
	protected BahanBakar bahanBakar;
	protected double kecepatan;
	
	public static int jumlahKendaraan;
	
	// 
	private String mesin;
	private String knalpot;
	
	// Constructor -> Overloadable
	// Default return type -> void
	public Kendaraan() {
		jumlahKendaraan += 1;
		//bahanBakar = 100;
		kecepatan = 0;
		
		mesin = "V8";
	}
	
	public Kendaraan(String mesin) {
		//bahanBakar = 100;
		kecepatan = 0;
		
		this.mesin = mesin;
	}
	
	public Kendaraan(String mesin, String knalpot) {
		
	}
	
	public BahanBakar getBahanBakar() {
		return bahanBakar;
	}

	public void setBahanBakar(BahanBakar bahanBakar) {
		this.bahanBakar = bahanBakar;
	}

	public String getMesin() {
		return mesin;
	}

	public void setMesin(String mesin) {
		this.mesin = mesin;
	}

	public String getKnalpot() {
		return knalpot;
	}

	public void setKnalpot(String knalpot) {
		this.knalpot = knalpot;
	}

	public double getKecepatan() {
		return kecepatan;
	}

	@Override
	public void berjalan() {
		//bahanBakar -= 10;
		kecepatan += 10;
		System.out.println("Kendaraan Berjalan");
	}
	
	@Override
	public void berjalan(String arah) {
		//bahanBakar -= 10;
		kecepatan += 10;
		System.out.println("Berjalan ke arah " + arah);
	}
	
	public void berjalan(int arah) {
		//bahanBakar -= 10;
		kecepatan += 10;
		System.out.println("Berjalan ke arah I " + arah);
	}
	
	public void berjalan(float arah) {
		//bahanBakar -= 10;
		kecepatan += 10;
		System.out.println("Berjalan ke arah F " + arah);
	}
	
	public void berjalan(String arah, int kecepatan) {
		//bahanBakar -= 10;
		this.kecepatan += kecepatan;
		System.out.println("Berjalan ke arah " + arah);
	}
	
	@Override
	public void rem() {
		kecepatan -= 5;
		//bahanBakar -= 3;
	}
}
